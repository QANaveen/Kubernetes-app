apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
  namespace: my-app-namespace
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:4.2
          ports:
            - containerPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: my-app-namespace
spec:
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27018
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-node-app-deployment
  namespace: my-app-namespace
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: my-node-app
  template:
    metadata:
      labels:
        app: my-node-app
    spec:
      containers:
        - name: my-node-app
          image: snaveenkpn/my-node-app:3
          ports:
            - containerPort: 7500
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
      volumes:
        - name: config-volume
          configMap:
            name: my-node-app-config
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-service
  namespace: my-app-namespace
spec:
  selector:
    app: my-node-app
  ports:
    - protocol: TCP
      port: 2000
      targetPort: 7500
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-node-app-config
  namespace: my-app-namespace
data:
  MONGODB_HOST: mongodb-service
  MONGODB_PORT: "27018"